def remote = []

data = [["virtual_machine_1", "5c832d8a-57a6-405f-a1be-7eb0b12d517d", "192.168.50.50"], ["virtual_machine_2", "Jenkins_2", "192.168.51.51"]]

for(int i=0;i<2;i++)
{
    def temp = [:]
    temp.name = data[i][0]
    temp.id = data[i][1]
    temp.host = data[i][2]
    temp.allowAnyHosts = true
    remote.add(temp)
}


node {

    stage ("Git Check Out") {
        git changelog: false, credentialsId: 'GIT_HUB_CREDENTIALS', poll: false, url: 'https://github.com/yashbhangdia/spring-boot-maven-example-helloworld.git'
    }

    stage ("Build") {
      bat label: '', script: 'mvn package'
    }

    stage('Testing'){

    }

	stage("Deploy SpringBoot App!") {
	    
	    remote.each{
	        item -> L:{
	            echo "Deploying to : ${item.name}"

	            withCredentials([sshUserPrivateKey(credentialsId: item.id, keyFileVariable: 'identity', passphraseVariable: '', usernameVariable: item.name)]) {
    			  item.user = item.name
    			  item.identityFile = identity
    			  sshCommand remote: item, command: 'rm -R deployment', failOnError:'false'
    			  sshCommand remote: item, command: 'mkdir deployment', failOnError:false
    			  sshCommand remote : item, command: 'cd /home/'+"${item.name}"+'/deployment; PID=`ps -eaf | grep "java -jar" | grep -v grep | awk \'{print $2}\'`; if [[ "" !=  "$PID" ]]; then echo "found $PID and killing it!!" ; kill -9 $PID; fi'
    			  sshPut remote: item, from: "./target", filterRegex: /.war$/, into: '/home/'+"${item.name}"+'/deployment/'
    			  sshCommand remote: item, command: 'cd /home/'+"${item.name}"+'/deployment/target; nohup java -jar *.war >> app.log &'
    	        }
	        }
	    }

  }

  stage('Post Deploy'){

      bat 'IF EXIST info RMDIR /S /Q info'
      bat 'mkdir info'

      remote.each{
          item -> L:{
              withCredentials([sshUserPrivateKey(credentialsId: item.id, keyFileVariable: 'identity', passphraseVariable: '', usernameVariable: item.name)]) {
        			  item.user = item.name
        			  item.identityFile = identity
        
        			  sshCommand remote: item, command: 'cd /home/'+"${item.name}"+'/deployment; rm -R temp', failOnError:'false'
        			  sshCommand remote: item, command: 'cd /home/'+"${item.name}"+'/deployment; mkdir temp; cd temp; jar xvf ../target/*.war'
        			  sshCommand remote: item, command: 'cd /home/'+"${item.name}"+'/deployment/temp/META-INF/maven/org.springframework.boot/SpringBootMavenExample; ls'
        			  sshGet remote: item, from:'deployment/temp/META-INF/maven/org.springframework.boot/SpringBootMavenExample/pom.properties', into: 'info/'+"${item.name}"+"-"+"${item.host}"+'.txt', override: true
        			  sshCommand remote: item, command: 'cd /home/'+"${item.name}"+'/deployment; rm -R temp', failOnError:'false'
              }
          }
      }
      
      echo "For Dashboard : http://127.0.0.1:5000/ "
  }

}
